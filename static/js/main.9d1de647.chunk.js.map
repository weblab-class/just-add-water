{"version":3,"sources":["Scene.js","App.js","serviceWorker.js","index.js"],"names":["Scene","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","centerSides","centerBottomRadius","centerTopRadius","centerHeight","centerTranslateZ","start","bind","assertThisInitialized","stop","animate","renderScene","computeBoundingBox","setupScene","destroyContext","handleWindowResize","stemRadius","stemHeight","flowerMaterial","THREE","color","flowerColor","wireMaterial","wireframe","leafMaterial","leafStemColor","flatshading","centerMaterial","stemMaterial","window","addEventListener","console","log","redraw","xOrigin","yOrigin","petalLength","petalInnerXRelative","petalInnerYRelative","petalOuterXRelative","petalOuterYRelative","xCp1","yCp1","yCp2","xCp2","petalShape","bezierCurveTo","numPetals","petalPitch","flowerGeometry","i","petalGeometry","rotateY","rotAngle","Math","PI","rotateZ","merge","flowerMesh","scene","add","JSON","stringify","mesh","geometry","dispose","material","remove","removeMesh","addFlowerMesh","leafLength","width1","width2","leafFoldAngle","shape1","geometry1","shape2","geometry2","rotateX","width","container","clientWidth","height","clientHeight","renderer","antialias","setPixelRatio","devicePixelRatio","shadowMap","enabled","gammaOutput","gammaFactor","type","background","camera","centerGeometry","centerMesh","translateOnAxis","stemGeometry","stemMesh","leafRotAngle","leafPitch","leavesTopBound","translateBy","leafGeometry","leafMesh","allGeometry","allMesh","object","spotLight","position","set","ambLight","boundingBox","setFromObject","center","getCenter","size","getSize","maxDim","max","x","y","z","fov","cameraZ","tan","minZ","min","cameraToFarEdge","far","lookAt","updateProjectionMatrix","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableKeys","screenSpacePanning","enableRotate","autoRotate","autoRotateSpeed","enablePan","target","update","setSize","appendChild","frameId","requestAnimationFrame","render","cancelAnimationFrame","innerWidth","innerHeight","aspect","removeChild","forceContextLoss","context","_this2","react_default","a","createElement","ref","style","overflow","Component","App","onChange","event","setState","defineProperty","name","parseFloat","value","id","step","src_Scene","assign","className","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d1de647.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport * as THREE from 'three';\r\nimport OrbitControls from 'three-orbitcontrols';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Scene extends Component{\r\n  static propTypes = {\r\n    /** number of petals */\r\n    numPetals: PropTypes.number,\r\n    /** pitch of petals in degrees */\r\n    petalPitch: PropTypes.number,\r\n    petalLength: PropTypes.number,\r\n    /** X coordinate of petal inner control point relative to length - between -1 and 1 */\r\n    petalInnerXRelative: PropTypes.number,\r\n    /** Y coordinate of petal inner control point relative to length - between -1 and 1 */\r\n    petalInnerYRelative: PropTypes.number,\r\n    /** X coordinate of petal outer control point relative to length - between -1 and 1 */\r\n    petalOuterXRelative: PropTypes.number,\r\n    /** Y coordinate of petal outer control point relative to length - between -1 and 1 */\r\n    petalOuterYRelative: PropTypes.number,\r\n    /** color of leaves and stems -- hex code */\r\n    leafStemColor: PropTypes.string,\r\n    /** color of flowers - hex code */\r\n    flowerColor: PropTypes.string,\r\n  }\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      centerSides : 3,\r\n      centerBottomRadius : 0,\r\n      centerTopRadius : 0,\r\n      centerHeight : 0.25,\r\n      centerTranslateZ : 0.25,\r\n    }\r\n    this.start = this.start.bind(this);\r\n    this.stop = this.stop.bind(this);\r\n    this.animate = this.animate.bind(this);\r\n    this.renderScene = this.renderScene.bind(this);\r\n    this.computeBoundingBox = this.computeBoundingBox.bind(this);\r\n    this.setupScene = this.setupScene.bind(this);\r\n    this.destroyContext = this.destroyContext.bind(this);\r\n    this.handleWindowResize = this.handleWindowResize.bind(this);\r\n\r\n    this.stemRadius = 0.25;\r\n    this.stemHeight = 15;\r\n    this.flowerMaterial = new THREE.MeshLambertMaterial({\r\n      color:this.props.flowerColor\r\n    }); \r\n    this.wireMaterial = new THREE.MeshBasicMaterial({\r\n      color: 0xff0000,\r\n      wireframe: true\r\n    });\r\n    this.leafMaterial = new THREE.MeshLambertMaterial({\r\n      color:this.props.leafStemColor,\r\n      flatshading:true\r\n    });\r\n    this.centerMaterial = new THREE.MeshLambertMaterial( {\r\n      color:\"#ffe600\",\r\n      flatshading: true\r\n    });\r\n    this.stemMaterial = new THREE.MeshBasicMaterial({ color: this.props.leafStemColor, })\r\n    // this.leafStemColor = \"#69a339\";\r\n  }\r\n\r\n  componentWillMount(){\r\n    window.addEventListener('resize', this.handleWindowResize)\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setupScene();\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    console.log(\"redrawing...\");\r\n    this.redraw();\r\n  }\r\n\r\n  petalGeometry(xOrigin, yOrigin, petalLength, petalInnerXRelative, petalInnerYRelative, petalOuterXRelative, petalOuterYRelative){\r\n    // petal shape control - keep these positive to avoid clipping, but clipping also looks sorta cool\r\n    let xCp1 = xOrigin + petalLength*petalInnerXRelative\r\n    let yCp1 = yOrigin+ petalLength*petalInnerYRelative;\r\n    let yCp2 = yOrigin+ petalLength*petalOuterYRelative;\r\n    // lies along x Axis\r\n    let xCp2 = xOrigin + petalLength*petalOuterXRelative;\r\n\r\n    // curve along x axis from (xOrigin, yOrigin) to (xOrigin, petalLength)\r\n    var petalShape = new THREE.Shape();\r\n    petalShape.bezierCurveTo(xCp1,yCp1, xCp2, yCp2, petalLength, yOrigin );\r\n    petalShape.bezierCurveTo(xCp2, - yCp2, xCp1, -yCp1, xOrigin, yOrigin);\r\n\r\n    var geometry = new THREE.ShapeGeometry( petalShape );\r\n    return geometry;\r\n  }\r\n\r\n  flowerGeometry(numPetals, petalLength, petalInnerXRelative, petalInnerYRelative, petalOuterXRelative, petalOuterYRelative, petalPitch){\r\n    let flowerGeometry = new THREE.Geometry();\r\n    for (let i = 0; i < numPetals; i++){\r\n      let petalGeometry = this.petalGeometry(0,0,petalLength,petalInnerXRelative, petalInnerYRelative, petalOuterXRelative, petalOuterYRelative);\r\n      petalGeometry.rotateY(-petalPitch);\r\n      let rotAngle = 2*Math.PI/ numPetals;\r\n      petalGeometry.rotateZ(rotAngle*i);\r\n      flowerGeometry.merge(petalGeometry);\r\n    }\r\n    return flowerGeometry;\r\n  }\r\n\r\n  addFlowerMesh(){\r\n    // x values are 0 and 1 by default\r\n    let flowerGeometry = this.flowerGeometry( this.props.numPetals,this.props.petalLength,this.props.petalInnerXRelative, this.props.petalInnerYRelative,this.props.petalOuterXRelative,this.props.petalOuterYRelative, this.props.petalPitch); \r\n    this.flowerMesh = new THREE.Mesh(flowerGeometry, this.flowerMaterial) ;\r\n    this.scene.add(this.flowerMesh)\r\n    console.log(\"number of petals=\" + JSON.stringify(this.props.numPetals));\r\n    console.log(\"flower rendered\");\r\n  }\r\n\r\n  removeMesh(mesh){\r\n    mesh.geometry.dispose();\r\n    mesh.material.dispose();\r\n    this.scene.remove(mesh);\r\n  }\r\n\r\n  redraw(){\r\n    this.removeMesh(this.flowerMesh);\r\n    this.addFlowerMesh();\r\n  }\r\n\r\n  leafGeometry(xOrigin, yOrigin, leafLength, width1, width2, leafFoldAngle){\r\n    // petal shape control - keep these positive to avoid clipping, but clipping also looks sorta cool\r\n    let yCp1 = width1;\r\n    let yCp2 = width2;\r\n    // lies along x Axis\r\n    let xCp1 = 0;\r\n    let xCp2 = leafLength;\r\n\r\n    var shape1 = new THREE.Shape();\r\n    shape1.bezierCurveTo( xOrigin + xCp1, yOrigin + yCp1, xOrigin + xCp2, yOrigin+yCp2, leafLength, yOrigin );\r\n    // draw 2 halves of leaf by copying and rotating the geometry\r\n    var geometry1 = new THREE.ShapeGeometry( shape1 );\r\n    var shape2 = new THREE.Shape();\r\n    shape2.bezierCurveTo( xOrigin + xCp1, yOrigin - yCp1, xOrigin + xCp2, yOrigin-yCp2, leafLength, yOrigin );\r\n    var geometry2 = new THREE.ShapeGeometry( shape2);\r\n    geometry1.rotateX(leafFoldAngle);\r\n    geometry2.rotateX(-leafFoldAngle);\r\n    geometry2.merge(geometry1);\r\n    return geometry2;\r\n  }\r\n  setupScene(){\r\n    this.width = this.container.clientWidth;\r\n    this.height = this.container.clientHeight;\r\n    \r\n    const renderer = new THREE.WebGLRenderer({antialias: true });\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.gammaOutput = true;\r\n    renderer.gammaFactor = 2.2\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n    this.scene = new THREE.Scene();\r\n    this.scene.background = new THREE.Color('white');\r\n\r\n    let cameraPersp = new THREE.PerspectiveCamera(60, this.width/this.height, 0.25, 1000);\r\n    let camera = cameraPersp;\r\n    this.scene.add(camera);\r\n\r\n\r\n    // draw flower\r\n    this.addFlowerMesh();\r\n\r\n    // draw stamens/disk as cylinder\r\n    let centerGeometry = new THREE.CylinderGeometry(this.state.centerTopRadius, this.state.centerBottomRadius, this.state.centerHeight, this.state.centerSides);\r\n    centerGeometry.rotateX(0.5*Math.PI);\r\n    let centerMesh = new THREE.Mesh(centerGeometry, this.centerMaterial);\r\n    centerMesh.translateOnAxis(new THREE.Vector3(0,0,1), this.state.centerTranslateZ);\r\n    this.scene.add(centerMesh);\r\n\r\n    // let leafStemColor = \"#96c76b\";\r\n    // draw stem\r\n    let stemGeometry = new THREE.CylinderGeometry(this.stemRadius, this.stemRadius, this.stemHeight,3);\r\n    stemGeometry.rotateX(0.5*Math.PI);\r\n    let stemMesh = new THREE.Mesh(stemGeometry, this.stemMaterial);\r\n    // move stem so its top is level with flower base\r\n    stemMesh.translateOnAxis(new THREE.Vector3(0,0,-1),  0.5* this.stemHeight);\r\n    this.scene.add(stemMesh);\r\n\r\n    //draw leaves\r\n    let leafRotAngle = 120 * (Math.PI/180);\r\n    let leafFoldAngle = 20 * (Math.PI/180);\r\n    let leafLength = 10;\r\n    let leafVertSpacing = 3;\r\n    let leafInner = 2;\r\n    let leafOuter = -1;\r\n    let leafPitch = 30*(Math.PI/180);\r\n    let leavesTopBound = -this.stemHeight*0.5;\r\n    let leavesBottomBound =  -this.stemHeight*0.9;\r\n    let translateBy = leavesBottomBound;\r\n    // absolutely no leaves above here\r\n    let flowersTopBound = 0;\r\n    for (let i = 0; translateBy < leavesTopBound && translateBy < flowersTopBound; i++){\r\n      translateBy  += leafVertSpacing;\r\n      let leafGeometry = this.leafGeometry(0,0,leafLength,leafInner, leafOuter, leafFoldAngle);\r\n      leafGeometry.rotateY(-leafPitch);\r\n      leafGeometry.rotateZ(i*leafRotAngle);\r\n      let leafMesh = new THREE.Mesh(leafGeometry, this.leafMaterial);\r\n      //cut off if above flower plane\r\n      leafMesh.translateOnAxis(new THREE.Vector3(0,0,1),translateBy);\r\n      this.scene.add(leafMesh);\r\n    }\r\n\r\n    this.renderer = renderer;\r\n    this.scene = this.scene;\r\n    this.camera = camera;\r\n\r\n    // set this.object to combo of all meshes - the only use of this is to get bounding box so texture doesn't matter\r\n    let allGeometry = new THREE.Geometry();\r\n    allGeometry.merge(stemGeometry);\r\n    allGeometry.merge(this.flowerMesh.geometry);\r\n    var allMesh = new THREE.Mesh( allGeometry, this.wireMaterial ) ;\r\n    this.object = allMesh;\r\n\r\n    let spotLight = new THREE.SpotLight(0xffffff, 0.9)\r\n    spotLight.position.set(10, 20, 15);\r\n    camera.add(spotLight);\r\n    this.spotLight = spotLight;\r\n\r\n    let ambLight = new THREE.AmbientLight(0x333333);\r\n    ambLight.position.set(5, 3, 5);\r\n    this.camera.add(ambLight);\r\n\r\n    this.computeBoundingBox();\r\n    // console.log(this.camera.zoom, this.camera.near, this.camera.far, this.camera.left, this.camera.right, this.camera.top, this.camera.bottom);\r\n    // console.log(this.object.position);\r\n    // console.log(this.camera.getWorldDirection());\r\n  }\r\n\r\n  computeBoundingBox(){\r\n    let offset = 1.60;\r\n    const boundingBox = new THREE.Box3();\r\n    boundingBox.setFromObject(this.object);\r\n    const center = boundingBox.getCenter();\r\n    const size = boundingBox.getSize();\r\n    const maxDim = Math.max( size.x, size.y, size.z );\r\n    const fov = this.camera.fov * ( Math.PI / 180 );\r\n    let cameraZ = maxDim / 2 / Math.tan( fov / 2 );\r\n    cameraZ *= offset;\r\n    this.camera.position.z = center.z + cameraZ;\r\n    const minZ = boundingBox.min.z;\r\n    const cameraToFarEdge = ( minZ < 0 ) ? -minZ + cameraZ : cameraZ - minZ;\r\n\r\n    this.camera.far = cameraToFarEdge * 3;\r\n    this.camera.lookAt(center);\r\n    this.camera.updateProjectionMatrix();\r\n\r\n    let controls = new OrbitControls( this.camera, this.renderer.domElement );\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.25;\r\n    controls.enableZoom = true;\r\n    controls.zoomSpeed = 0.1;\r\n    controls.enableKeys = false;\r\n    controls.screenSpacePanning = false;\r\n    controls.enableRotate = true;\r\n    controls.autoRotate = false;\r\n    controls.dampingFactor = 1;\r\n    controls.autoRotateSpeed = 1.2;\r\n    controls.enablePan = false;\r\n    controls.target.set(center.x, center.y, center.z);\r\n    controls.update();\r\n    this.controls = controls;\r\n    this.renderer.setSize(this.width, this.height);\r\n    this.container.appendChild(this.renderer.domElement);\r\n    this.start();\r\n  }\r\n  \r\n  start(){\r\n    if (!this.frameId) {\r\n      this.frameId = requestAnimationFrame(this.animate)\r\n    }\r\n  }\r\n\r\n  renderScene(){\r\n    this.renderer.render(this.scene, this.camera)\r\n  }\r\n\r\n  animate() {\r\n    this.frameId = requestAnimationFrame(this.animate);\r\n    this.controls.update();\r\n    this.renderScene();\r\n  }\r\n\r\n  stop() {\r\n    cancelAnimationFrame(this.frameId);\r\n  }\r\n\r\n  handleWindowResize(){\r\n    let width = window.innerWidth;\r\n    let height = window.innerHeight;\r\n    this.camera.aspect = width/height;\r\n    this.camera.updateProjectionMatrix();\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.stop();\r\n    this.destroyContext();\r\n  }\r\n\r\n  destroyContext(){\r\n    this.container.removeChild(this.renderer.domElement);\r\n    this.renderer.forceContextLoss();\r\n    this.renderer.context = null;\r\n    this.renderer.domElement = null;\r\n    this.renderer = null;\r\n  }\r\n\r\n\r\n  render(){\r\n    const width = '100%';\r\n    const height = '100%';\r\n    return(\r\n      <div \r\n        ref={(container) => {this.container = container}}\r\n        style={{width: width, height: height, position: 'absolute', overflow: 'hidden'}}\r\n      >\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default Scene;","import React, { Component } from 'react';\r\nimport Scene from './Scene';\r\nimport \"./App.css\";\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      numPetals:6,\r\n      petalLength:5,\r\n      petalPitch : 30*Math.PI/180,\r\n      petalInnerXRelative:0,\r\n      petalOuterXRelative:1,\r\n      petalInnerYRelative:0.1,\r\n      petalOuterYRelative:0.5,\r\n      flowerColor:\"#24afff\",\r\n      leafStemColor:\"#69a339\",\r\n    }\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n  onChange(event){\r\n    console.log(event);\r\n    this.setState({[event.target.name]: parseFloat(event.target.value)});\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"inputs\">\r\n          <ul>\r\n            <li>\r\n              <label>number of petals</label>\r\n              <input type=\"range\" name = \"numPetals\" value={this.state.numPetals} onChange={this.onChange} min={0} max={24}step={1}/>\r\n            </li>\r\n            <li>\r\n              <label>size</label>\r\n              <input type=\"range\" name = \"petalLength\" value={this.state.petalLength} onChange={this.onChange} min={0} max={8}step={0.1}/>\r\n            </li>\r\n            <li>\r\n              <label>pitch</label>\r\n              <input type=\"range\" name = \"petalPitch\" value={this.state.petalPitch} onChange={this.onChange} min={-90*Math.PI/180} max={90*Math.PI/180}step={.01}/>\r\n            </li>\r\n            <li>\r\n              <label>innerX</label>\r\n              <input type=\"range\" name = \"petalInnerXRelative\" value={this.state.petalInnerXRelative} onChange={this.onChange} min={0} max={2}step={0.1}/>\r\n            </li>\r\n            <li>\r\n              <label>innerY</label>\r\n              <input type=\"range\" name = \"petalInnerYRelative\" value={this.state.petalInnerYRelative} onChange={this.onChange} min={-2} max={2}step={0.1}/>\r\n            </li>\r\n            <li>\r\n              <label>outerX</label>\r\n              <input type=\"range\" name = \"petalOuterXRelative\" value={this.state.petalOuterXRelative} onChange={this.onChange} min={0} max={2}step={0.1}/>\r\n            </li>\r\n            <li>\r\n              <label>outerY</label>\r\n              <input type=\"range\" name = \"petalOuterYRelative\" value={this.state.petalOuterYRelative} onChange={this.onChange} min={-2} max={2}step={0.1}/>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <Scene className=\"Scene\" {...this.state}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}